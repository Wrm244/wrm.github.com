"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4985],{20304:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var r=t(74848),a=t(28453);const i={id:"stack",slug:"/DS_stack",title:"\u6808",author:"RiverMountain",date:"2023/05/23",tags:["DS","algorithms","stack"],keywords:["DS","algorithms","stack"],description:"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u7b14\u8bb0-\u6808",last_update:{date:"2023/05/23"}},s=void 0,l={id:"course/Data Structures And Algorithms/\u6570\u636e\u7ed3\u6784(Java)/stack",title:"\u6808",description:"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u7b14\u8bb0-\u6808",source:"@site/docs/course/Data Structures And Algorithms/\u6570\u636e\u7ed3\u6784(Java)/5Stack.md",sourceDirName:"course/Data Structures And Algorithms/\u6570\u636e\u7ed3\u6784(Java)",slug:"/DS_stack",permalink:"/en/docs/DS_stack",draft:!1,unlisted:!1,tags:[{inline:!0,label:"DS",permalink:"/en/docs/tags/ds"},{inline:!0,label:"algorithms",permalink:"/en/docs/tags/algorithms"},{inline:!0,label:"stack",permalink:"/en/docs/tags/stack"}],version:"current",frontMatter:{id:"stack",slug:"/DS_stack",title:"\u6808",author:"RiverMountain",date:"2023/05/23",tags:["DS","algorithms","stack"],keywords:["DS","algorithms","stack"],description:"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u7b14\u8bb0-\u6808",last_update:{date:"2023/05/23"}},sidebar:"course",previous:{title:"\u9012\u5f52",permalink:"/en/docs/DS_recursion"},next:{title:"\u5806",permalink:"/en/docs/DS_heap"}},c={},o=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u94fe\u8868\u5b9e\u73b0",id:"\u94fe\u8868\u5b9e\u73b0",level:2},{value:"\u6570\u7ec4\u5b9e\u73b0",id:"\u6570\u7ec4\u5b9e\u73b0",level:2},{value:"\u5e94\u7528",id:"\u5e94\u7528",level:2}];function u(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"\u6982\u8ff0",children:"\u6982\u8ff0"}),"\n",(0,r.jsxs)(e.p,{children:["\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c",(0,r.jsx)(e.strong,{children:"stack"})," \u662f\u4e00\u79cd\u7ebf\u6027\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u80fd\u5728\u5176\u4e00\u7aef\u6dfb\u52a0\u6570\u636e\u548c\u79fb\u9664\u6570\u636e\u3002\u4e60\u60ef\u6765\u8bf4\uff0c\u8fd9\u4e00\u7aef\u79f0\u4e4b\u4e3a",(0,r.jsx)(e.strong,{children:"\u6808\u9876"}),"\uff0c\u53e6\u4e00\u7aef\u4e0d\u80fd\u64cd\u4f5c\u6570\u636e\u7684\u79f0\u4e4b\u4e3a",(0,r.jsx)(e.strong,{children:"\u6808\u5e95"}),"\uff0c\u5c31\u5982\u540c\u751f\u6d3b\u4e2d\u7684\u4e00\u645e\u4e66"]}),"\n",(0,r.jsx)(e.p,{children:"\u5148\u63d0\u4f9b\u4e00\u4e2a\u6808\u63a5\u53e3"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"public interface Stack<E> {\n    /**\n     * \u5411\u6808\u9876\u538b\u5165\u5143\u7d20\n     * @param value \u5f85\u538b\u5165\u503c\n     * @return \u538b\u5165\u6210\u529f\u8fd4\u56de true, \u5426\u5219\u8fd4\u56de false\n     */\n    boolean push(E value);\n\n    /**\n     * \u4ece\u6808\u9876\u5f39\u51fa\u5143\u7d20\n     * @return \u6808\u975e\u7a7a\u8fd4\u56de\u6808\u9876\u5143\u7d20, \u6808\u4e3a\u7a7a\u8fd4\u56de null\n     */\n    E pop();\n\n    /**\n     * \u8fd4\u56de\u6808\u9876\u5143\u7d20, \u4e0d\u5f39\u51fa\n     * @return \u6808\u975e\u7a7a\u8fd4\u56de\u6808\u9876\u5143\u7d20, \u6808\u4e3a\u7a7a\u8fd4\u56de null\n     */\n    E peek();\n\n    /**\n     * \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\n     * @return \u7a7a\u8fd4\u56de true, \u5426\u5219\u8fd4\u56de false\n     */\n    boolean isEmpty();\n\n    /**\n     * \u5224\u65ad\u6808\u662f\u5426\u5df2\u6ee1\n     * @return \u6ee1\u8fd4\u56de true, \u5426\u5219\u8fd4\u56de false\n     */\n    boolean isFull();\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u94fe\u8868\u5b9e\u73b0",children:"\u94fe\u8868\u5b9e\u73b0"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:"public class LinkedListStack<E> implements Stack<E>, Iterable<E> {\n\n    private final int capacity;\n    private int size;\n    private final Node<E> head = new Node<>(null, null);\n\n    public LinkedListStack(int capacity) {\n        this.capacity = capacity;\n    }\n\n    @Override\n    public boolean push(E value) {\n        if (isFull()) {\n            return false;\n        }\n        head.next = new Node<>(value, head.next);\n        size++;\n        return true;\n    }\n\n    @Override\n    public E pop() {\n        if (isEmpty()) {\n            return null;\n        }\n        Node<E> first = head.next;\n        head.next = first.next;\n        size--;\n        return first.value;\n    }\n\n    @Override\n    public E peek() {\n        if (isEmpty()) {\n            return null;\n        }\n        return head.next.value;\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return head.next == null;\n    }\n\n    @Override\n    public boolean isFull() {\n        return size == capacity;\n    }\n\n    @Override\n    public Iterator<E> iterator() {\n        return new Iterator<E>() {\n            Node<E> p = head.next;\n            @Override\n            public boolean hasNext() {\n                return p != null;\n            }\n\n            @Override\n            public E next() {\n                E value = p.value;\n                p = p.next;\n                return value;\n            }\n        };\n    }\n\n    static class Node<E> {\n        E value;\n        Node<E> next;\n\n        public Node(E value, Node<E> next) {\n            this.value = value;\n            this.next = next;\n        }\n    }\n}\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u6570\u7ec4\u5b9e\u73b0",children:"\u6570\u7ec4\u5b9e\u73b0"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class ArrayStack<E> implements Stack<E>, Iterable<E>{\n    private final E[] array;\n    private int top = 0;\n\n    @SuppressWarnings("all")\n    public ArrayStack(int capacity) {\n        this.array = (E[]) new Object[capacity];\n    }\n\n    @Override\n    public boolean push(E value) {\n        if (isFull()) {\n            return false;\n        }\n        array[top++] = value;\n        return true;\n    }\n\n    @Override\n    public E pop() {\n        if (isEmpty()) {\n            return null;\n        }\n        return array[--top];\n    }\n\n    @Override\n    public E peek() {\n        if (isEmpty()) {\n            return null;\n        }\n        return array[top-1];\n    }\n\n    @Override\n    public boolean isEmpty() {\n        return top == 0;\n    }\n\n    @Override\n    public boolean isFull() {\n        return top == array.length;\n    }\n\n    @Override\n    public Iterator<E> iterator() {\n        return new Iterator<E>() {\n            int p = top;\n            @Override\n            public boolean hasNext() {\n                return p > 0;\n            }\n\n            @Override\n            public E next() {\n                return array[--p];\n            }\n        };\n    }\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u5e94\u7528",children:"\u5e94\u7528"}),"\n",(0,r.jsx)(e.p,{children:"\u6a21\u62df\u5982\u4e0b\u65b9\u6cd5\u8c03\u7528"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public static void main(String[] args) {\n    System.out.println("main1");\n    System.out.println("main2");\n    method1();\n    method2();\n    System.out.println("main3");\n}\n\npublic static void method1() {\n    System.out.println("method1");\n    method3();\n}\n\npublic static void method2() {\n    System.out.println("method2");\n}\n\npublic static void method3() {\n    System.out.println("method3");\n}\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u6a21\u62df\u4ee3\u7801"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-java",children:'public class CPU {\n    static class Frame {\n        int exit;\n\n        public Frame(int exit) {\n            this.exit = exit;\n        }\n    }\n    static int pc = 1; // \u6a21\u62df\u7a0b\u5e8f\u8ba1\u6570\u5668 Program counter\n    static ArrayStack<Frame> stack = new ArrayStack<>(100); // \u6a21\u62df\u65b9\u6cd5\u8c03\u7528\u6808\n\n    public static void main(String[] args) {\n        stack.push(new Frame(-1));\n        while (!stack.isEmpty()) {\n            switch (pc) {\n                case 1 -> {\n                    System.out.println("main1");\n                    pc++;\n                }\n                case 2 -> {\n                    System.out.println("main2");\n                    pc++;\n                }\n                case 3 -> {\n                    stack.push(new Frame(pc + 1));\n                    pc = 100;\n                }\n                case 4 -> {\n                    stack.push(new Frame(pc + 1));\n                    pc = 200;\n                }\n                case 5 -> {\n                    System.out.println("main3");\n                    pc = stack.pop().exit;\n                }\n                case 100 -> {\n                    System.out.println("method1");\n                    stack.push(new Frame(pc + 1));\n                    pc = 300;\n                }\n                case 101 -> {\n                    pc = stack.pop().exit;\n                }\n                case 200 -> {\n                    System.out.println("method2");\n                    pc = stack.pop().exit;\n                }\n                case 300 -> {\n                    System.out.println("method3");\n                    pc = stack.pop().exit;\n                }\n            }\n        }\n    }\n}\n'})})]})}function p(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(u,{...n})}):u(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var r=t(96540);const a={},i=r.createContext(a);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);