"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6214],{75134:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var s=t(74848),i=t(28453);const l={id:"\u7ebf\u6027\u8868\u8fdb\u9636",slug:"/1\u7ebf\u6027\u8868",title:"1 \u7ebf\u6027\u8868",author:"RiverMountain",date:"2023/06/22",tags:["C","\u6570\u636e\u7ed3\u6784C","C\u7ebf\u6027\u8868"],keywords:["C","\u6570\u636e\u7ed3\u6784C","C\u7ebf\u6027\u8868"],description:"\u6570\u636e\u7ed3\u6784\u8fdb\u9636\u7ebf\u6027\u8868",last_update:{date:"2023/06/22"}},r=void 0,a={id:"course/Linux C/\u6570\u636e\u7ed3\u6784(C\u8bed\u8a00)/\u7ebf\u6027\u8868\u8fdb\u9636",title:"1 \u7ebf\u6027\u8868",description:"\u6570\u636e\u7ed3\u6784\u8fdb\u9636\u7ebf\u6027\u8868",source:"@site/docs/course/Linux C/\u6570\u636e\u7ed3\u6784(C\u8bed\u8a00)/1 \u7ebf\u6027\u8868.md",sourceDirName:"course/Linux C/\u6570\u636e\u7ed3\u6784(C\u8bed\u8a00)",slug:"/1\u7ebf\u6027\u8868",permalink:"/en/docs/1\u7ebf\u6027\u8868",draft:!1,unlisted:!1,tags:[{inline:!0,label:"C",permalink:"/en/docs/tags/c"},{inline:!0,label:"\u6570\u636e\u7ed3\u6784C",permalink:"/en/docs/tags/\u6570\u636e\u7ed3\u6784c"},{inline:!0,label:"C\u7ebf\u6027\u8868",permalink:"/en/docs/tags/c\u7ebf\u6027\u8868"}],version:"current",frontMatter:{id:"\u7ebf\u6027\u8868\u8fdb\u9636",slug:"/1\u7ebf\u6027\u8868",title:"1 \u7ebf\u6027\u8868",author:"RiverMountain",date:"2023/06/22",tags:["C","\u6570\u636e\u7ed3\u6784C","C\u7ebf\u6027\u8868"],keywords:["C","\u6570\u636e\u7ed3\u6784C","C\u7ebf\u6027\u8868"],description:"\u6570\u636e\u7ed3\u6784\u8fdb\u9636\u7ebf\u6027\u8868",last_update:{date:"2023/06/22"}},sidebar:"course",previous:{title:"\u6307\u9488\u4e0e\u51fd\u6570",permalink:"/en/docs/\u6307\u9488\u4e0e\u51fd\u6570"},next:{title:"1 \u7ebf\u6027\u8868\u8bfe\u540e\u7f16\u7a0b\u9898",permalink:"/en/docs/1 \u7ebf\u6027\u8868\u8bfe\u540e\u7f16\u7a0b\u9898"}},d={},c=[{value:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8",id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8",level:2},{value:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784",id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784",level:3},{value:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u5e38\u7528\u64cd\u4f5c",id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u5e38\u7528\u64cd\u4f5c",level:3},{value:"\u521d\u59cb\u5316\u7ebf\u6027\u8868",id:"\u521d\u59cb\u5316\u7ebf\u6027\u8868",level:4},{value:"\u987a\u5e8f\u8868\u63d2\u5165\u4e0e\u5220\u9664",id:"\u987a\u5e8f\u8868\u63d2\u5165\u4e0e\u5220\u9664",level:4},{value:"\u63d2\u5165\u7b97\u6cd5\u5b9e\u73b0\u987a\u5e8f\uff1a",id:"\u63d2\u5165\u7b97\u6cd5\u5b9e\u73b0\u987a\u5e8f",level:5},{value:"\u5220\u9664\u7b97\u6cd5\u5b9e\u73b0\u601d\u8def\uff1a",id:"\u5220\u9664\u7b97\u6cd5\u5b9e\u73b0\u601d\u8def",level:5},{value:"\u5176\u4ed6\u7ebf\u6027\u8868\u64cd\u4f5c",id:"\u5176\u4ed6\u7ebf\u6027\u8868\u64cd\u4f5c",level:3},{value:"\u83b7\u53d6\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e",id:"\u83b7\u53d6\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e",level:4},{value:"\u83b7\u53d6\u987a\u5e8f\u8868\u957f\u5ea6",id:"\u83b7\u53d6\u987a\u5e8f\u8868\u957f\u5ea6",level:4},{value:"\u5224\u65ad\u987a\u5e8f\u8868\u662f\u5426\u4e3a\u7a7a\u8868\u4e0e\u6e05\u7a7a",id:"\u5224\u65ad\u987a\u5e8f\u8868\u662f\u5426\u4e3a\u7a7a\u8868\u4e0e\u6e05\u7a7a",level:4},{value:"\u987a\u5e8f\u8f93\u51fa\u987a\u5e8f\u8868",id:"\u987a\u5e8f\u8f93\u51fa\u987a\u5e8f\u8868",level:4},{value:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9",id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9",level:3},{value:"\u4f18\u70b9\uff1a",id:"\u4f18\u70b9",level:4},{value:"\u7f3a\u70b9\uff1a",id:"\u7f3a\u70b9",level:4},{value:"\u5168\u90e8\u4ee3\u7801",id:"\u5168\u90e8\u4ee3\u7801",level:3},{value:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8(\u975e\u5faa\u73af)",id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u975e\u5faa\u73af",level:2},{value:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9",id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9",level:3},{value:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784",id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784",level:3},{value:"\u542b\u6709\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8",id:"\u542b\u6709\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8",level:3},{value:"\u521d\u59cb\u5316\u94fe\u5f0f\u7ebf\u6027\u8868",id:"\u521d\u59cb\u5316\u94fe\u5f0f\u7ebf\u6027\u8868",level:4},{value:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c",id:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c",level:4},{value:"\u63d2\u5165\u7684\u4e24\u79cd\u64cd\u4f5c",id:"\u63d2\u5165\u7684\u4e24\u79cd\u64cd\u4f5c",level:5},{value:"\u5220\u9664\u64cd\u4f5c",id:"\u5220\u9664\u64cd\u4f5c",level:5},{value:"\u65e0\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8",id:"\u65e0\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8",level:3},{value:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c",id:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c-1",level:4},{value:"\u9500\u6bc1\u64cd\u4f5c",id:"\u9500\u6bc1\u64cd\u4f5c",level:4},{value:"\u5355\u94fe\u8868\u5e94\u7528\u4e3e\u4f8b",id:"\u5355\u94fe\u8868\u5e94\u7528\u4e3e\u4f8b",level:3},{value:"\u591a\u9879\u5f0f\u5408\u5e76",id:"\u591a\u9879\u5f0f\u5408\u5e76",level:4},{value:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5faa\u73af\u5b58\u50a8",id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5faa\u73af\u5b58\u50a8",level:2},{value:"\u65e0\u5934\u7ed3\u70b9(\u7ea6\u745f\u592b\u95ee\u9898)",id:"\u65e0\u5934\u7ed3\u70b9\u7ea6\u745f\u592b\u95ee\u9898",level:3},{value:"\u5faa\u73af\u53cc\u94fe\u8868(\u9762\u5411\u8fc7\u7a0b)",id:"\u5faa\u73af\u53cc\u94fe\u8868\u9762\u5411\u8fc7\u7a0b",level:2},{value:"\u6570\u636e\u7ed3\u6784",id:"\u6570\u636e\u7ed3\u6784",level:3},{value:"\u51fd\u6570\u62bd\u8c61",id:"\u51fd\u6570\u62bd\u8c61",level:3},{value:"\u5404\u51fd\u6570\u4e66\u5199",id:"\u5404\u51fd\u6570\u4e66\u5199",level:3},{value:"\u5faa\u73af\u53cc\u94fe(\u53d8\u957f\u7ed3\u6784\u4f53)",id:"\u5faa\u73af\u53cc\u94fe\u53d8\u957f\u7ed3\u6784\u4f53",level:2},{value:"\u7ed3\u6784\u4f53\u5b9a\u4e49",id:"\u7ed3\u6784\u4f53\u5b9a\u4e49",level:3},{value:"\u5faa\u73af\u53cc\u94fe\u8868(\u9762\u5411\u5bf9\u8c61)",id:"\u5faa\u73af\u53cc\u94fe\u8868\u9762\u5411\u5bf9\u8c61",level:2},{value:"\u7ed3\u6784\u4f53\u5b9a\u4e49(\u7c7b)",id:"\u7ed3\u6784\u4f53\u5b9a\u4e49\u7c7b",level:3},{value:"\u7c7b\u7684\u6784\u9020",id:"\u7c7b\u7684\u6784\u9020",level:3}];function o(n){const e={a:"a",admonition:"admonition",annotation:"annotation",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",table:"table",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsxs)(e.p,{children:["\u5728\u7f16\u7a0b\u7684\u65f6\u5019\u8981\u628a\u81ea\u5df1\u7684\u7f16\u5199\u7684\u4ee3\u7801\u7f6e\u8eab\u4e8e\u5f00\u53d1\u5927\u578b\u9879\u76ee\u7684\u5b50\u6a21\u5757\u89c6\u89d2\u4e2d\uff0c\u6709\u5229\u4e8e\u63d0\u9ad8\u81ea\u5df1\u5b8f\u89c2\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\uff0c",(0,s.jsx)(e.code,{children:"main"}),"\u53ea\u662f\u4f60\u7684\u6d4b\u8bd5\u3002"]})}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsx)(e.p,{children:"\u7ebf\u6027\u8868\u5b9a\u4e49\uff1a\u96f6\u4e2a\u6216\u8005\u591a\u4e2a\u6570\u636e\u5143\u7d20\u7684\u6709\u9650\u5e8f\u5217\u3002"})}),"\n",(0,s.jsxs)(e.p,{children:["\u7ebf\u6027\u8868\u5143\u7d20\u7684\u4e2a\u6570",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{children:"\u2265"}),(0,s.jsx)(e.mn,{children:"0"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"n(n\u22650)"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.jsx)(e.span,{className:"mrel",children:"\u2265"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"0"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"\u5b9a\u4e49\u4e3a\u7ebf\u6027\u8868\u7684\u957f\u5ea6\uff0c\u5f53",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mi,{children:"n"}),(0,s.jsx)(e.mo,{children:"="}),(0,s.jsx)(e.mn,{children:"0"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"n=0"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,s.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.jsx)(e.span,{className:"mrel",children:"="}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,s.jsx)(e.span,{className:"mord",children:"0"})]})]})]}),"\u65f6\uff0c\u79f0\u4e3a\u7a7a\u8868\u3002"]}),"\n",(0,s.jsx)(e.p,{children:"\u5bf9\u4e8e\u4e00\u4e2a\u975e\u7a7a\u7684\u7ebf\u6027\u8868\u6216\u8005\u7ebf\u6027\u7ed3\u6784\uff0c\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5b58\u5728\u552f\u4e00\u7684\u4e00\u4e2a\u88ab\u79f0\u4f5c\u201c\u7b2c\u4e00\u4e2a\u201d\u7684\u6570\u636e\u5143\u7d20\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u5b58\u5728\u552f\u4e00\u7684\u4e00\u4e2a\u88ab\u79f0\u4f5c\u201c\u6700\u540e\u4e00\u4e2a\u201d\u7684\u6570\u636e\u5143\u7d20\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u9664\u4e86\u7b2c\u4e00\u4e2a\u5916\uff0c\u7ed3\u6784\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u524d\u9a71\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5916\uff0c\u7ed3\u6784\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u540e\u7ee7\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8",children:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"\u7ebf\u6027\u8868\u7684\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784"}),"\u662f\u6307\u7528\u4e00\u6bb5\u5730\u5740\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u4f9d\u6b21\u5b58\u50a8\u7ebf\u6027\u8868\u7684\u6570\u636e\u5143\u7d20\u3002"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(72500).A+"",width:"1038",height:"141"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784",children:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7ed3\u6784"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u5b58\u50a8\u7ed3\u6784"',children:"/* datatype\u7c7b\u578b\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\uff0c\u8fd9\u91cc\u5047\u8bbe\u4e3aint */\ntypedef int datatype;\n\ntypedef struct node_st{\n    datatype *data; // \u6570\u7ec4\u5b58\u50a8\u6570\u636e\u5143\u7d20\uff0c\u6700\u5927\u503c\u4e3aMAXSIZE\u3002\n    int last; //\u7ebf\u6027\u8868\u5f53\u524d\u957f\u5ea6\n}sqlist;\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u5e38\u7528\u64cd\u4f5c",children:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u5e38\u7528\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.h4,{id:"\u521d\u59cb\u5316\u7ebf\u6027\u8868",children:"\u521d\u59cb\u5316\u7ebf\u6027\u8868"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u521d\u59cb\u5316\u65b9\u6cd51-\u6307\u9488\u51fd\u6570\u8fd4\u56de"',children:"/**\n * @description: \u6307\u9488\u51fd\u6570\u521d\u59cb\u5316\u987a\u5e8f\u7ebf\u6027\u8868\n * @param {int} n\n * @return {sqlist} *\n */\nsqlist *sqlist_create(int n)\n{\n    sqlist *me = NULL;\n    //\u521d\u59cb\u5316\u5b58\u50a8\u7a7a\u95f4\n    me = malloc(sizeof(*me));\n    //\u521d\u59cb\u5316\u7ebf\u6027\u8868\u7a7a\u95f4\uff0c\u6309\u7167\u7ed9\u5b9a\u7684\u957f\u5ea6\u5f00\u8f9f\n    me->data = malloc(sizeof(datatype)*n);\n    if (me == NULL)\n        return NULL;\n    //\u7ebf\u6027\u8868\u5f53\u524d\u957f\u5ea6\u521d\u59cb\u5316\u4e3a-1\n    me->last = -1;\n    return me;\n}\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u521d\u59cb\u5316\u65b9\u6cd52-\u53cc\u91cd\u6307\u9488"',children:"/**\n * @description: \u4e0d\u5e26\u8fd4\u56de\u503c\u521d\u59cb\u5316\u987a\u5e8f\u7ebf\u6027\u8868\uff0c\u8fd9\u91cc\u53cc\u6307\u9488**ptr\u7684\u610f\u601d\u662f\u5bf9\u6307\u9488\u7684\u5730\u5740\u8fdb\u884c\u6539\u53d8\n * @param {sqlist} **ptr\n * @param {int} n\n * @return {*}\n */\nvoid sqlist_create1(sqlist **ptr,int n)\n\n{\n    *ptr = malloc(sizeof(**ptr));\n    (*ptr)->data = malloc(sizeof(datatype)*n);\n    if (*ptr == NULL)\n        return;\n    (*ptr)->last = -1;\n    return;\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["\u4ee5\u4e0a\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u5bf9\u987a\u5e8f\u7ebf\u6027\u8868\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5173\u4e8e\u5b9a\u4e49\u51fd\u6570\u7684\u6ce8\u610f\u4e8b\u9879\u53c2\u89c1\uff1a",(0,s.jsx)(e.a,{href:"/en/docs/%E6%8C%87%E9%92%88%E4%B8%8E%E5%87%BD%E6%95%B0",children:"\u6307\u9488\u4e0e\u51fd\u6570"})," \u7684\u5185\u5b58\u6cc4\u6f0f\u7ae0\u8282\u3002"]}),"\n",(0,s.jsx)(e.h4,{id:"\u987a\u5e8f\u8868\u63d2\u5165\u4e0e\u5220\u9664",children:"\u987a\u5e8f\u8868\u63d2\u5165\u4e0e\u5220\u9664"}),"\n",(0,s.jsx)(e.h5,{id:"\u63d2\u5165\u7b97\u6cd5\u5b9e\u73b0\u987a\u5e8f",children:"\u63d2\u5165\u7b97\u6cd5\u5b9e\u73b0\u987a\u5e8f\uff1a"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"\u5982\u679c\u63d2\u5165\u4f4d\u7f6e\u4e0d\u5408\u7406\uff0c\u629b\u51fa\u5f02\u5e38\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u5982\u679c\u7ebf\u6027\u8868\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u6570\u7ec4\u957f\u5ea6\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u6216\u8005\u52a8\u6001\u589e\u52a0\u5bb9\u91cf\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u4ece\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u5411\u524d\u904d\u5386\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u5206\u522b\u5c06\u5b83\u4eec\u90fd\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u5c06\u8981\u63d2\u5165\u7684\u5143\u7d20\u586b\u5165\u5230\u7b2ci\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u8868\u957f\u5ea6\u52a01\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(14144).A+"",width:"1039",height:"610"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u987a\u5e8f\u8868\u63d2\u5165\u5143\u7d20"',children:"/**\n * @description: \u7ebf\u6027\u8868\u7684\u63d2\u5165\n * @param {sqlist} *me\n * @param {int} i\n * @param {datatype} *data\n * @return {*}\n */\nint sqlist_insert(sqlist *me, int i, datatype *data)\n{\n    int j;\n    //\u5b58\u50a8\u7a7a\u95f4\u5df2\u6ee1\n    if (me->last == DATASIZE - 1)\n        return -1;\n    //i\u503c\u4e0d\u5408\u6cd5\u5224\u65ad    \n    if (i < 0 || i > me->last + 1)\n        return -2;\n\n    for (j = me->last; i <= j; j--)\n        me->data[j + 1] = me->data[j];\n        //\u63d2\u5165\u4f4d\u7f6e\u4ee5\u53ca\u4e4b\u540e\u7684\u4f4d\u7f6e\u540e\u79fb\u52a81\u4f4d\n    me->data[i] = *data;\n    me->last++;\n    return 0;\n}\n"})}),"\n",(0,s.jsx)(e.h5,{id:"\u5220\u9664\u7b97\u6cd5\u5b9e\u73b0\u601d\u8def",children:"\u5220\u9664\u7b97\u6cd5\u5b9e\u73b0\u601d\u8def\uff1a"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"\u5982\u679c\u5220\u9664\u4f4d\u7f6e\u4e0d\u5408\u7406\uff0c\u629b\u51fa\u5f02\u5e38\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u53d6\u51fa\u5220\u9664\u5143\u7d20\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u4ece\u5220\u9664\u5143\u7d20\u4f4d\u7f6e\u5f00\u59cb\u904d\u5386\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4f4d\u7f6e\uff0c\u5206\u522b\u5c06\u5b83\u4eec\u90fd\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsxs)(e.li,{children:["\u8868\u957f\u5ea6\u51cf1\u3002\n",(0,s.jsx)(e.img,{src:t(24077).A+"",width:"1034",height:"515"})]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u987a\u5e8f\u8868\u5220\u9664\u5143\u7d20"',children:"/**\n * @description: \u7ebf\u6027\u8868\u67d0\u4e2ai\u4f4d\u7f6e\u5143\u7d20\u8fdb\u884c\u5220\u9664\n * @param {sqlist} *me\n * @param {int} i\n * @return {*}\n */\nint sqlist_delete(sqlist *me, int i)\n{\n    int j;\n    //\u5224\u65adi\u503c\u662f\u5426\u5408\u6cd5\n    if (i < 0 || i > me->last)\n        return -1;\n    //\u4ece\u5220\u9664\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5c06\u540e\u9762\u7684\u5143\u7d20\u90fd\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\n    for (j = i + 1; j <= me->last; j++)\n        me->data[j - 1] = me->data[j];\n    //\u66f4\u65b0\u7ebf\u6027\u8868\u957f\u5ea6\n    me->last--;\n    //\u8fd4\u56de0\u8868\u793a\u5220\u9664\u6210\u529f\n    return 0;\n}\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u5176\u4ed6\u7ebf\u6027\u8868\u64cd\u4f5c",children:"\u5176\u4ed6\u7ebf\u6027\u8868\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.h4,{id:"\u83b7\u53d6\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e",children:"\u83b7\u53d6\u6307\u5b9a\u5143\u7d20\u7684\u4f4d\u7f6e"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u83b7\u53d6\u4f4d\u7f6e"',children:"/**\n * @description: \u67e5\u627e\u5339\u914d\u5143\u7d20\u7684\u4f4d\u7f6e\u4e0b\u6807\n * @param {sqlist} *me\n * @param {datatype} *data\n * @return {int}\n */\nint sqlist_find(sqlist *me, datatype *data)\n{\n    int i;\n    //\u5224\u65ad\u7ebf\u6027\u8868\u662f\u5426\u4e3a\u7a7a\n    if (sqlist_isempty == 0)\n        return -1;\n    //\u904d\u5386\u7ebf\u6027\u8868\uff0c\u67e5\u627e\u6307\u5b9a\u5143\u7d20\n    for (i = 0; i < me->last; i++)\n        if (me->data[i] == *data)\n            return i;\n    //\u672a\u627e\u5230\u6307\u5b9a\u5143\u7d20\uff0c\u8fd4\u56de-2\n    return -2;\n}\n"})}),"\n",(0,s.jsx)(e.h4,{id:"\u83b7\u53d6\u987a\u5e8f\u8868\u957f\u5ea6",children:"\u83b7\u53d6\u987a\u5e8f\u8868\u957f\u5ea6"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title = "\u83b7\u53d6\u987a\u5e8f\u8868\u957f\u5ea6"',children:"/**\n * @description: \u67e5\u770b\u7ebf\u6027\u8868\u957f\u5ea6\n * @param {sqlist} *me\n * @return {int}\n */\nint sqlist_getnum(sqlist *me)\n{\n    return (me->last + 1);\n}\n"})}),"\n",(0,s.jsx)(e.h4,{id:"\u5224\u65ad\u987a\u5e8f\u8868\u662f\u5426\u4e3a\u7a7a\u8868\u4e0e\u6e05\u7a7a",children:"\u5224\u65ad\u987a\u5e8f\u8868\u662f\u5426\u4e3a\u7a7a\u8868\u4e0e\u6e05\u7a7a"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"/**\n * @description: \u5224\u65ad\u7ebf\u6027\u8868\u662f\u5426\u4e3a\u7a7a\n * @param {sqlist} *me\n * @return {int}\n */\nint sqlist_isempty(sqlist *me)\n{\n    if (me->last = -1)\n        return 0;\n    return -1;\n}\n/**\n * @description: \u6e05\u7a7a\u7ebf\u6027\u8868\n * @param {sqlist} *me\n * @return {int}\n */\nint sqlist_setempty(sqlist *me)\n{\n    me->last = -1; \n    sqlist_destroy(me);\n    return 0;\n}\n"})}),"\n",(0,s.jsx)(e.h4,{id:"\u987a\u5e8f\u8f93\u51fa\u987a\u5e8f\u8868",children:"\u987a\u5e8f\u8f93\u51fa\u987a\u5e8f\u8868"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u8f93\u51fa\u7ebf\u6027\u8868"',children:'/**\n * @description: \u663e\u793a\u7ebf\u6027\u8868\u5185\u5bb9\n * @param {sqlist} *me\n * @return {void}\n */\nvoid sqlist_display(sqlist *me)\n{\n    int i;\n    if (me->last == -1)\n        return;\n    for (i = 0; i <= me->last; i++)\n        printf("%d ", me->data[i]);\n    printf("\\n");\n    return;\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9",children:"\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9"}),"\n",(0,s.jsx)(e.h4,{id:"\u4f18\u70b9",children:"\u4f18\u70b9\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u65e0\u9700\u4e3a\u8868\u793a\u8868\u4e2d\u5143\u7d20\u4e4b\u524d\u7684\u903b\u8f91\u5173\u7cfb\u589e\u52a0\u989d\u5916\u7684\u5b58\u50a8\u7a7a\u95f4\uff08\u76f8\u5bf9\u4e0e\u94fe\u5f0f\u5b58\u50a8\uff09\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u53ef\u4ee5\u5feb\u901f\u5730\u5b58\u53d6\u8868\u4e2d\u4efb\u4e00\u4f4d\u7f6e\u7684\u5143\u7d20\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"\u7f3a\u70b9",children:"\u7f3a\u70b9\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u64cd\u4f5c\u9700\u8981\u79fb\u52a8\u5927\u91cf\u7684\u5143\u7d20\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u5f53\u7ebf\u6027\u8868\u957f\u5ea6\u53d8\u5316\u8f83\u5927\u65f6\uff0c\u96be\u4ee5\u786e\u5b9a\u5b58\u50a8\u7a7a\u95f4\u7684\u5bb9\u91cf\u3002"}),"\n",(0,s.jsx)(e.li,{children:"\u9020\u6210\u5b58\u50a8\u7a7a\u95f4\u7684\u201c\u788e\u7247\u201d\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u5168\u90e8\u4ee3\u7801",children:"\u5168\u90e8\u4ee3\u7801"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",metastring:'title="make\u7ebf\u6027\u8868\u987a\u5e8f\u5b58\u50a8\u9879\u76ee\u914d\u7f6e\u6587\u4ef6"',children:"all : main # \u9ed8\u8ba4\u76ee\u6807\u662f main\nmain:main.o sqlist.o # main \u4f9d\u8d56\u4e8e main.o \u548c sqlist.o\n\t$(CC) $^ -g -O0 -o $@ # \u94fe\u63a5\u76ee\u6807\u6587\u4ef6\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\nclean: # \u5b9a\u4e49\u4f2a\u76ee\u6807 clean\n\trm *.o main -rf # \u5220\u9664\u6240\u6709\u76ee\u6807\u6587\u4ef6\u548c\u53ef\u6267\u884c\u6587\u4ef6\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="sqlist.h"',children:"/*\n * @Author: wrm244 wrm244@outlook.com\n * @Date: 2023-06-22 16:37:43\n * @LastEditors: wrm244 wrm244@outlook.com\n * @LastEditTime: 2023-06-22 21:28:01\n * @FilePath: /arr/sqlist.h\n * @Description: \u5bf9\u987a\u5e8f\u7ebf\u6027\u8868\u7684\u5934\u6587\u4ef6\uff0c\u4e3b\u8981\u63cf\u8ff0\u4e86\u7ebf\u6027\u8868\u7ed3\u6784\u4f53\u4e0e\u51fd\u6570\n * \n * Copyright \xa9 2023 by RiverMountain, All Rights Reserved. \n */\n#ifndef sqlist_H__\n#define sqlist_H__\n#define DATASIZE 1024\ntypedef int datatype;\n\n/**\n * @description: \u987a\u5e8f\u7ebf\u6027\u8868\u7ed3\u6784\u4f53\u5305\u542b\u5143\u7d20\u6307\u9488\u4e0e\u5143\u7d20\u4e0b\u6807\n * @param *data,last;\n */\ntypedef struct {\n    datatype *data;\n    int last;\n}sqlist;\n\nsqlist *sqlist_create(int);\nvoid sqlist_create1(sqlist **,int);\nint sqlist_insert(sqlist *,int i,datatype *);\nint sqlist_delete(sqlist *,int i);\nint sqlist_find(sqlist *,datatype *);\nint sqlist_isempty(sqlist *);\nint sqlist_setempty(sqlist *);\nint sqlist_getnum(sqlist *);\nint sqlist_union(sqlist *,sqlist*);\nvoid sqlist_display(sqlist *);\nint sqlist_destroy(sqlist *);\n\n#endif\n\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="sqlist.c"',children:'#include <stdio.h>\n#include <stdlib.h>\n#include "sqlist.h"\n\n/**\n * @description: \u6307\u9488\u51fd\u6570\u521d\u59cb\u5316\u987a\u5e8f\u7ebf\u6027\u8868\n * @param {int} n\n * @return {sqlist} *\n */\nsqlist *sqlist_create(int n)\n{\n    sqlist *me = NULL;\n    me = malloc(sizeof(*me));\n    me->data = malloc(sizeof(datatype)*n);\n    if (me == NULL)\n        return NULL;\n    me->last = -1;\n    return me;\n}\n\n/**\n * @description: \u4e0d\u5e26\u8fd4\u56de\u503c\u521d\u59cb\u5316\u987a\u5e8f\u7ebf\u6027\u8868\uff0c\u8fd9\u91cc\u53cc\u6307\u9488**ptr\u7684\u610f\u601d\u662f\u5bf9\u6307\u9488\u7684\u5730\u5740\u8fdb\u884c\u6539\u53d8\n * @param {sqlist} **ptr\n * @param {int} n\n * @return {*}\n */\nvoid sqlist_create1(sqlist **ptr,int n)\n\n{\n    *ptr = malloc(sizeof(**ptr));\n    (*ptr)->data = malloc(sizeof(datatype)*n);\n    if (*ptr == NULL)\n        return;\n    (*ptr)->last = -1;\n    return;\n}\n\n/**\n * @description: \u5bf9\u7ebf\u6027\u8868\u7684\u63d2\u5165\n * @param {sqlist} *me\n * @param {int} i\n * @param {datatype} *data\n * @return {*}\n */\nint sqlist_insert(sqlist *me, int i, datatype *data)\n{\n    int j;\n    if (me->last == DATASIZE - 1)\n        return -1;\n    if (i < 0 || i > me->last + 1)\n        return -2;\n\n    for (j = me->last; i <= j; j--)\n        me->data[j + 1] = me->data[j];\n    me->data[i] = *data;\n    me->last++;\n    return 0;\n}\n/**\n * @description: \u7ebf\u6027\u8868\u67d0\u4e2ai\u4f4d\u7f6e\u5143\u7d20\u8fdb\u884c\u5220\u9664\n * @param {sqlist} *me\n * @param {int} i\n * @return {*}\n */\nint sqlist_delete(sqlist *me, int i)\n{\n    int j;\n    if (i < 0 || i > me->last)\n        return -1;\n    for (j = i + 1; j <= me->last; j++)\n        me->data[j - 1] = me->data[j];\n    me->last--;\n    return 0;\n}\n/**\n * @description: \u67e5\u627e\u5339\u914d\u5143\u7d20\u7684\u4f4d\u7f6e\u4e0b\u6807\n * @param {sqlist} *me\n * @param {datatype} *data\n * @return {int}\n */\nint sqlist_find(sqlist *me, datatype *data)\n{\n    int i;\n    if (sqlist_isempty == 0)\n        return -1;\n    for (i = 0; i < me->last; i++)\n        if (me->data[i] == *data)\n            return i;\n    return -2;\n}\n/**\n * @description: \u5224\u65ad\u7ebf\u6027\u8868\u662f\u5426\u4e3a\u7a7a\n * @param {sqlist} *me\n * @return {int}\n */\nint sqlist_isempty(sqlist *me)\n{\n    if (me->last = -1)\n        return 0;\n    return -1;\n}\n/**\n * @description: \u6e05\u7a7a\u7ebf\u6027\u8868\n * @param {sqlist} *me\n * @return {int}\n */\nint sqlist_setempty(sqlist *me)\n{\n    me->last = -1;\n    return 0;\n}\n/**\n * @description: \u67e5\u770b\u7ebf\u6027\u8868\u957f\u5ea6\n * @param {sqlist} *me\n * @return {int}\n */\nint sqlist_getnum(sqlist *me)\n{\n    return (me->last + 1);\n}\n\n/**\n * @description: \u7ec4\u5408\u4e24\u4e2a\u7ebf\u6027\u8868\u8fd4\u56de\u7ed9list1\n * @param {sqlist} *list1\n * @param {sqlist} *list2\n * @return {int}\n */\nint sqlist_union(sqlist *list1, sqlist *list2)\n{\n    int i = 0;\n    while (i <= list2->last)\n    {\n        if (sqlist_find(list1, &list2->data[i]) < 0)\n        {\n            sqlist_insert(list1,i,&list2->data[i]);\n        }\n        i++;\n    }\n}\n\n/**\n * @description: \u663e\u793a\u7ebf\u6027\u8868\u5185\u5bb9\n * @param {sqlist} *me\n * @return {void}\n */\nvoid sqlist_display(sqlist *me)\n{\n    int i;\n    if (me->last == -1)\n        return;\n    for (i = 0; i <= me->last; i++)\n        printf("%d ", me->data[i]);\n    printf("\\n");\n    return;\n}\n/**\n * @description: \u9500\u6bc1\u7ebf\u6027\u8868\u5185\u5bb9\n * @param {sqlist} *me\n * @return {int} \u6210\u529f\u8fd4\u56de0\n */\nint sqlist_destroy(sqlist *me)\n{\n    free(me);\n    return 0;\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="main"',children:'#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include "sqlist.h"\nint main()\n{\n    int i,err;\n    sqlist *list= NULL,*list1= NULL;\n    datatype arr[]={12,23,34,45,56};\n    datatype arr1[]={89,45,34,67,43,56,23};\n    //list = sqlist_create();\n    sqlist_create1(&list,6);\n    if(list == NULL)\n    {\n        fprintf(stderr,"sqlist_create() failed!\\n");\n        exit(1);\n    }\n    \n    list1 = sqlist_create(7);\n    if(list1 == NULL)\n    {\n        fprintf(stderr,"sqlist_create() failed!\\n");\n        exit(1);\n    }\n\n    for(i = 0;i <sizeof(arr)/sizeof(*arr);i++)\n    {\n        if((err=sqlist_insert(list,0,&arr[i]))!=0)\n        {\n            if(err == -1)\n                fprintf(stderr,"The sqlist is full!\\n");\n            else if(err ==-2)\n                fprintf(stderr,"The pos you want to insert is wrong\\n");\n                else\n                    fprintf(stderr,"Error!\\n");\n            exit(1);\n        }\n    }\n\n    for(i = 0;i <sizeof(arr1)/sizeof(*arr1);i++)\n    {\n        if((err=sqlist_insert(list1,0,&arr1[i]))!=0)\n        {\n            if(err == -1)\n                fprintf(stderr,"The sqlist is full!\\n");\n            else if(err ==-2)\n                fprintf(stderr,"The pos you want to insert is wrong\\n");\n                else\n                    fprintf(stderr,"Error!\\n");\n            exit(1);\n        }\n    }\n    sqlist_display(list);\n    sqlist_display(list1);\n    //sqlist_destroy(list);\n    //sqlist_destroy(list1);\n    sqlist_union(list,list1);\n    sqlist_display(list);\n    exit(0);\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u975e\u5faa\u73af",children:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8(\u975e\u5faa\u73af)"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"\u7ebf\u6027\u7684\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\uff08\u94fe\u8868\uff09\u662f\u6307\u7528\u4efb\u610f\u7684\u5b58\u50a8\u5355\u5143\u6765\u4f9d\u6b21\u5b58\u653e\u7ebf\u6027\u8868\u7684\u7ed3\u70b9\uff0c\u8fd9\u7ec4\u5355\u5143\u65e2\u53ef\u4ee5\u662f\u8fde\u7eed\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e0d\u8fde\u7eed\u7684\uff0c\u751a\u81f3\u662f\u96f6\u6563\u7684\u5206\u5e03\u5728\u5185\u5b58\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u4e0a\u3002\u56e0\u6b64\uff0c\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u7684\u903b\u8f91\u6b21\u5e8f\u548c\u7269\u7406\u6b21\u5e8f\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002\u4e3a\u4e86\u6b63\u786e\u8868\u793a\u7ed3\u70b9\u95f4\u7684\u903b\u8f91\u7ed3\u6784\uff0c\u5728\u5b58\u50a8\u6bcf\u4e2a\u7ed3\u70b9\u503c\u7684\u540c\u65f6\uff0c\u8fd8\u5fc5\u987b\u5b58\u50a8\u6307\u793a\u5176\u540e\u7ee7\u7ed3\u70b9\u7684\u5730\u5740\uff08\u6216\u4f4d\u7f6e\uff09\u4fe1\u606f\uff0c\u8fd9\u4e24\u90e8\u5206\u7ec4\u6210\u4e86\u94fe\u8868\u4e2d\u7684\u7ed3\u70b9\u7ed3\u6784\uff08\u5982\u56fe\uff09\u3002"}),"\n"]}),"\n",(0,s.jsx)(e.table,{children:(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"data"}),(0,s.jsx)(e.th,{children:"next"})]})})}),"\n",(0,s.jsx)(e.p,{children:"\u5176\u4e2d\uff0cdata\u662f\u6570\u636e\u57df\uff0c\u7528\u6765\u5b58\u653e\u7ed3\u70b9\u7684\u503c\u3002next\u662f\u6307\u9488\u57df\uff08\u4e5f\u79f0\u94fe\u57df\uff09\uff0c\u7528\u6765\u5b58\u653e\u540e\u7ee7\u7ed3\u70b9\u7684\u5730\u5740\u3002\u94fe\u8868\u6b63\u662f\u901a\u8fc7\u6bcf\u4e2a\u7ed3\u70b9\u7684\u94fe\u57df\u5c06\u7ebf\u6027\u8868\u7684n\u4e2a\u7ed3\u70b9\u6309\u5176\u903b\u8f91\u6b21\u5e8f\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u3002\u7ed3\u70b9\u6709\u4e00\u4e2a\u94fe\u57df\u7684\u79f0\u4e3a\u5355\u94fe\u8868\u3002"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(21714).A+"",width:"450",height:"78"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9",children:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7684\u4f18\u7f3a\u70b9"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\u94fe\u5f0f\u5b58\u50a8\u65f6\uff0c\u76f8\u90bb\u6570\u636e\u5143\u7d20\u53ef\u968f\u610f\u5b58\u653e\uff0c\u4f46\u6240\u5360\u5b58\u50a8\u7a7a\u95f4\u5206\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u5b58\u653e\u7ed3\u70b9\u503c\uff0c\u53e6\u4e00\u90e8\u5206\u5b58\u653e\u8868\u793a\u7ed3\u70b9\u95f4\u5173\u7cfb\u7684\u6307\u9488","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u4f18\u70b9\uff1a\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\u5f88\u65b9\u4fbf\uff0c\u4f7f\u7528\u7075\u6d3b\uff0c\u5b58\u50a8\u7a7a\u95f4\u5229\u7528\u7387\u9ad8\u3002"}),"\n",(0,s.jsxs)(e.li,{children:["\u7f3a\u70b9:\uff1a\u5b58\u50a8\u5bc6\u5ea6\u5c0f",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mo,{children:"<"}),(0,s.jsx)(e.mn,{children:"1"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"(<1)"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mrel",children:"<"}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"1"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"\uff0c\u67e5\u627e\u548c\u4fee\u6539\u9700\u8981\u904d\u5386\u6574\u4e2a\u94fe\u8868\u3002"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u987a\u5e8f\u5b58\u50a8\u65f6\uff0c\u76f8\u90bb\u6570\u636e\u5143\u7d20\u7684\u5b58\u653e\u5730\u5740\u4e5f\u76f8\u90bb(\u903b\u8f91\u4e0e\u7269\u7406\u7edf\u4e00)\ufe54\u8981\u6c42\u5185\u5b58\u4e2d\u53ef\u7528\u5b58\u50a8\u5355\u5143\u7684\u5730\u5740\u5fc5\u987b\u662f\u8fde\u7eed\u7684\u3002\u4f18\u70b9:\u5b58\u50a8\u5bc6\u5ea6\u5927",(0,s.jsxs)(e.span,{className:"katex",children:[(0,s.jsx)(e.span,{className:"katex-mathml",children:(0,s.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(e.semantics,{children:[(0,s.jsxs)(e.mrow,{children:[(0,s.jsx)(e.mo,{stretchy:"false",children:"("}),(0,s.jsx)(e.mo,{children:"="}),(0,s.jsx)(e.mn,{children:"1"}),(0,s.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(e.annotation,{encoding:"application/x-tex",children:"(=1)"})]})})}),(0,s.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mopen",children:"("}),(0,s.jsx)(e.span,{className:"mrel",children:"="}),(0,s.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,s.jsxs)(e.span,{className:"base",children:[(0,s.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(e.span,{className:"mord",children:"1"}),(0,s.jsx)(e.span,{className:"mclose",children:")"})]})]})]}),"\uff0c\u6613\u4e8e\u67e5\u627e\u548c\u4fee\u6539\u3002","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u7f3a\u70b9:\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u65f6\u4e0d\u65b9\u4fbf\uff1b\u5b58\u50a8\u7a7a\u95f4\u5229\u7528\u7387\u4f4e\uff0c\u9884\u5148\u5206\u914d\u5185\u5b58\u53ef\u80fd\u9020\u6210\u5b58\u50a8\u7a7a\u95f4\u6d6a\u8d39\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784",children:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="\u94fe\u5f0f\u5b58\u50a8\u7ed3\u6784\u4ee3\u7801"',children:"/*\n * @Author: wrm244 wrm244@outlook.com\n * @Date: 2023-06-23 15:40:08\n * @LastEditors: wrm244 wrm244@outlook.com\n * @LastEditTime: 2023-06-23 19:10:52\n * @FilePath: /list/linklist/simple/head/list.h\n * @Description:  \u7ebf\u6027\u8868\u7684\u94fe\u5f0f\u8868\u793a\u58f0\u660e\u51fd\u6570\u4e0e\u6570\u636e\u7ed3\u6784\n * \n * Copyright \xa9 2023 by RiverMountain, All Rights Reserved. \n */\n#ifndef LIST_H__\n#define LIST_H__\n\ntypedef int datatype; // \u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u4e3a\u6574\u578b\ntypedef struct list\n{\n    datatype data; // \u6570\u636e\u57df\n    struct list *next; // \u6307\u9488\u57df\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\n}list; // \u5b9a\u4e49\u94fe\u8868\u7ed3\u6784\u4f53\n\nlist *list_create(); // \u521b\u5efa\u94fe\u8868\n\nint list_insert_at(list *,int ,datatype *); // \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\nint list_order_insert(list *,datatype *); // \u6309\u987a\u5e8f\u63d2\u5165\u5143\u7d20\nint list_delete_at(list *,int i,datatype *); // \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\nint list_delete(list *,datatype *); // \u5220\u9664\u6307\u5b9a\u5143\u7d20\nint list_isempty(list *); // \u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\nvoid list_display(list *); // \u663e\u793a\u94fe\u8868\u4e2d\u7684\u5143\u7d20\nvoid list_destroy(list *); // \u9500\u6bc1\u94fe\u8868\n\n#endif\n\n"})}),"\n",(0,s.jsxs)(e.admonition,{type:"danger",children:[(0,s.jsxs)(e.p,{children:["\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u8fc7\u7a0b\u4e2d\u5982\u679c\u9700\u8981\u4f20\u5730\u5740\u53c2\u6570\u7684\u8bdd\uff0c\u5c3d\u91cf\u7528",(0,s.jsx)(e.code,{children:"void *func(type *,type *,...)"}),"\u6765\u5b9a\u4e49\uff0c\u800c\u4e0d\u662f",(0,s.jsx)(e.code,{children:"void *func(type &,type &,...)"}),"\uff0c\u5728\u6807\u51c6C\u8bed\u8a00\u4e2d\u662f\u6ca1\u6709\u5b58\u5728\u51fd\u6570\u53c2\u6570\u662f",(0,s.jsx)(e.code,{children:"&"}),"\u8fd0\u7b97\u7b26\uff0c\u5728C++\u4e2d\u624d\u6709\u5b9a\u4e49\uff0c\u7136\u800c\u8fd9\u662f\u56fd\u5185\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u4e66\u7c4d\u7684\u5927\u591a\u6570\u5199\u6cd5\u6216\u8005\u8bf4\u67d0\u4e9b\u8001\u5e08\u6559\u5b66\u8fc7\u7a0b\u4e2d\u628aC\u4e0eC++\u6df7\u4e3a\u4e00\u8c08\uff0c\u8fd9\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u53e6\u5916\u4e00\u65b9\u9762\u4ece\u903b\u8f91\u4e0a\u8bb2\uff0c\u8bd5\u60f3\u4ee5\u4e0b\uff0c\u5f53\u4f60\u5728\u9605\u8bfb\u4ee3\u7801\u4f7f\u7528\u51fd\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u6839\u636e\u5916\u90e8\u8f93\u5165\u5224\u5b9a\u6211\u4f20\u8fdb\u53bb\u7684\u662f\u4ec0\u4e48\u7c7b\u578b\u53c2\u6570\uff0c\u5bf9\u4e8e\u76f4\u89c9\u6765\u8bf4\u662f\u5f88\u4e0d\u9ad8\u6548\u7684\u3002\u5c31\u6bd4\u5982\u8bf4\uff1a"]}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:'title="C++\u4ee3\u7801"',children:'void func1(int *a)\n{\n\t*a = 100;\n\treturn ;\n}\nvoid func2(int &a)\n{\n\ta = 100;\n\treturn ;\n}\n\nint main(){\n\tint *p = (int *)malloc(sizeof(int *)); //\u8fd9\u91cc\u5fc5\u987b\u5f3a\u8f6c\u4e0d\u7136\u8bed\u4e49\u5206\u6790\u8fc7\u4e0d\u4e86\u3002\n\t*p = 10;\n\tprintf("[%s] *p=%d\\n",__FUNCTION__,*p);\n\tfunc1(p);\n\tprintf("[%s] f*p=%d\\n",__FUNCTION__,*p);\n}\n\n/*\u8f93\u51fa\u7ed3\u679c\n[main] *p=10\n[main] f*p=100\n*/\n'})}),(0,s.jsxs)(e.p,{children:["\u4ee5\u4e0a\u4ee3\u7801\u53ef\u4ee5\u8bf4\u6211\u4eec\u5728",(0,s.jsx)(e.code,{children:"main"}),"\u51fd\u6570\u4e2d\u6e05\u695a\u660e\u4e86\u77e5\u9053",(0,s.jsx)(e.code,{children:"p"}),"\u503c\u662f\u6307\u9488\u4f20\u8fdb\u53bb\u7ed9\u51fd\u6570\uff0c\u51fd\u6570\u6536\u5230\u7684\u4e5f\u662f\u6307\u9488\uff0c\u4e0d\u7528\u518d\u7ffb\u627efun1()\u51fd\u6570\u7684\u5177\u4f53\u62bd\u8c61\u5b9a\u4e49\uff0c\u540c\u6837\u7684\u5982\u4e0b\u4ee3\u7801\uff1a"]}),(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-cpp",metastring:'title="C++\u8bed\u8a00"',children:'void func2(int &a);\nint main(){\n\tint p = 10;\n\tprintf("[%s] p=%d\\n",__FUNCTION__,p);\n\tfunc2(p);\n\tprintf("[%s] fp=%d\\n",__FUNCTION__,p);\n}\n\n/*\u8f93\u51fa\u7ed3\u679c\n[main] p=10\n[main] fp=100\n*/\n'})}),(0,s.jsxs)(e.p,{children:["\u6211\u4eec\u4ece\u4ee5\u4e0a\u4ee3\u7801\u7684",(0,s.jsx)(e.code,{children:"main()"}),"\u51fd\u6570\u7684\u53d8\u91cf\u5b9a\u4e49\u53ef\u4ee5\u770b\u51fa\uff0c",(0,s.jsx)(e.code,{children:"p"}),"\u5c31\u662f",(0,s.jsx)(e.code,{children:"int"}),"\u7c7b\u578b\uff0c\u4e0d\u662f\u6307\u9488\uff0c\u6211\u5f15\u7528",(0,s.jsx)(e.code,{children:"func2()"}),"\u51fd\u6570\u4f20\u8fdb\u53bb\u4e5f\u662fint\u7c7b\u578b\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4f60\u8fd8\u8981\u53bb\u7ffb\u627e\u8be5\u51fd\u6570\u5177\u4f53\u67e5\u770b\u51fd\u6570\u7684\u62bd\u8c61\u624d\u80fd\u5f97\u77e5\uff0c\u8fd9\u51fd\u6570\u539f\u6765\u662f\u628a\u6211\u4f20\u8fdb\u53bb\u7684\u53d8\u91cf\u7ed9\u53d6\u4e86\u5730\u5740\u503c\uff0c\u5bf9\u6211\u6765\u8bf4\u662f\u6bd4\u8f83\u4e0d\u9ad8\u6548\u7684\u3002"]})]}),"\n",(0,s.jsx)(e.h3,{id:"\u542b\u6709\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8",children:"\u542b\u6709\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8"}),"\n",(0,s.jsx)(e.h4,{id:"\u521d\u59cb\u5316\u94fe\u5f0f\u7ebf\u6027\u8868",children:"\u521d\u59cb\u5316\u94fe\u5f0f\u7ebf\u6027\u8868"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(82555).A+"",width:"600",height:"127"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'{9} title="\u521d\u59cb\u5316\u94fe\u5f0f\u7ebf\u6027\u8868"',children:"/**\n * @description: \u521d\u59cb\u5316\u94fe\u5f0f\u7ebf\u6027\u8868\n * @return {list} *\n */\nlist *list_create()\n{\n    list *me;\n    me = malloc(sizeof(*me));\n    me->next = malloc(sizeof(*me));\n    if (me == NULL)\n        return NULL;\n    me->next = NULL; //\u5934\u8282\u70b9\u4e3a\u7a7a\uff0c\u4e0b\u4e00\u94fe\u8868\u5730\u5740\u8d4b\u503c\u4e3a\u7a7a\n    return me;\n}\n"})}),"\n",(0,s.jsxs)(e.admonition,{type:"tip",children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(24123).A+"",width:"945",height:"527"})}),(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(75642).A+"",width:"940",height:"544"})}),(0,s.jsxs)(e.p,{children:["\u4ee5\u4e0a\u8c03\u8bd5\u8f93\u51fa\u4e3a",(0,s.jsx)(e.code,{children:"[list_create] me->next->next = (nil)"})," \u5373\u4f7f\u4f60\u6ca1\u6709",(0,s.jsx)(e.code,{children:"me->next = malloc(sizeof(*me));"}),"\u8fd9\u4e2a\u8bed\u53e5\uff0c\u7a0b\u5e8f\u4e5f\u53ef\u80fd\u4f1a\u6267\u884c\u6210\u529f(\u56e0\u4e3a\u5728\u7533\u8bf7\u7ed3\u6784\u4f53\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u628a",(0,s.jsx)(e.code,{children:"me->next"}),"\u8d4b\u503c\u4e3a",(0,s.jsx)(e.code,{children:"nil"}),"\u7a7a\u6307\u9488\uff0c\u53ef\u4ee5\u4ece\u8c03\u8bd5\u4e0a\u770b\u5f97\u51fa\u6765)\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u4f60\u4e0d\u80fd\u65f6\u523b\u628a\u63e1 ",(0,s.jsx)(e.code,{children:"me->next"})," \u662f\u4e0d\u662f\u4e00\u4e2a\u91ce\u6307\u9488\uff0c\u6709\u53ef\u80fd\u5728\u522b\u7684\u7f16\u8bd1\u671f\u4e2d\u6ca1\u6709\u5728\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u7684\u65f6\u5019\u8ba9\u5176\u5d4c\u5957\u6307\u9488\u521d\u59cb\u5316\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u4e3a me->next \u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002"]})]}),"\n",(0,s.jsx)(e.h4,{id:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c",children:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(56975).A+"",width:"600",height:"158"})}),"\n",(0,s.jsx)(e.h5,{id:"\u63d2\u5165\u7684\u4e24\u79cd\u64cd\u4f5c",children:"\u63d2\u5165\u7684\u4e24\u79cd\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"/**\n * @description: \u57fa\u4e8e\u5e8f\u5217\u63d2\u5165\u6570\u503c\n * @param {list} *me\n * @param {int} i\n * @param {datatype} *data\n * @return {int} \u6210\u529f\u8fd4\u56de0\uff0c\u4e0d\u6210\u529f\u8fd4\u56de\u5176\u4f59\u503c\n */\nint list_insert_at(list *me,int i,datatype *data)\n{\n    int j = 0;\n    list *node = me,*newnode; //\u4ee3\u66ffme\u9632\u6b62\u4fee\u6539\u5230\u539f\u6307\u9488\n    if(i < 0)\n        return -1;\n    while(j < i && node != NULL){  //\u627e\u53bb\u8282\u70b9\n        node = node->next;\n        j++;\n    }\n    if(node){\n        newnode = malloc(sizeof(*newnode));\n        if(newnode == NULL)\n            return -2;\n        newnode->data = *data;\n        \n        newnode->next = node->next; //\u8fd9\u53e5\u8bdd\u5728\u7b2c\u4e00\u6b21\u5934\u8282\u70b9next\u4e3a\u7a7a\u7684\u60c5\u51b5\u4e0b\u662f\u5e9f\u8bdd\n        node->next = newnode;\n        return 0;\n    }else{\n        return -3;\n    }\n}\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"/**\n * @description: \u63d2\u5165\u7684\u8bdd\u533a\u5206\u4e0a\u9762\u5c3e\u63d2\u6cd5\u5934\u63d2\u6cd5\uff0c\u5728\u6309\u987a\u5e8f\u63d2\u5165\u6bd4\u8f83\u7b26\u5408\u751f\u4ea7\n * @param {list} *me\n * @param {datatype} *data\n * @return {int} \u6210\u529f\u8fd4\u56de0\uff0c\u4e0d\u6210\u529f\u8fd4\u56de\u5176\u4f59\u503c\n */\nint list_order_insert(list *me,datatype *data)\n{\n    list *p = me,*q;\n    while(p->next && p->next->data < *data) //\u627e\u5230\u524d\u6307\u9488\n        p = p->next;\n    q = malloc(sizeof(*q));\n    if(q == NULL)\n        return -1;\n    q->data = *data;\n    q->next = p->next;\n    p->next = q;\n    return 0;\n}\n"})}),"\n",(0,s.jsx)(e.h5,{id:"\u5220\u9664\u64cd\u4f5c",children:"\u5220\u9664\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(86856).A+"",width:"600",height:"101"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title="list_delete"',children:"int list_delete(list *me, datatype *data) {\n  list *p = me, *q;\n  while (p->next && p->next->data != *data) // \u627e\u5230\u76f8\u7b49\u7684\u524d\u9a71\u7ed3\u70b9\n    p = p->next;\n  if (p->next == NULL)\n    return -1;\n  else {\n    q = p->next;\n    p->next = q->next;\n    free(q);\n    q = NULL;\n  }\n  return 0;\n}\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"\u8fd9\u79cd\u60c5\u51b5\u4e0d\u4fdd\u8bc1\u5220\u9664\u91cd\u590d\u5143\u7d20"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"int list_delete_at(list *me, int i, datatype *data) {\n  int j = 0;\n  list *p = me, *q;\n  if (i < 0)\n    return -1;\n  while (j < i && p) {\n    p = p->next;\n    j++;\n  }\n  if (p) {\n    q = p->next;\n    *data = q->data;\n    p->next = q->next;\n    free(q);\n    q = NULL;\n    return 0;\n  }\n  return -2;\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u65e0\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8",children:"\u65e0\u7a7a\u5934\u8282\u70b9\u94fe\u5f0f\u5b58\u50a8"}),"\n",(0,s.jsx)(e.h4,{id:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c-1",children:"\u63d2\u5165\u4e0e\u5220\u9664\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title = "\u63d2\u5165"',children:"int list_insert(struct node_st **list, datatype *data) {\n\n  struct node_st *new;\n  new = malloc(sizeof(*new));\n  if (new == NULL)\n    return -1;\n  new->data = *data;\n  new->next = *list;\n  *list = new;\n  return 0;\n}\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",metastring:'title = "\u5220\u9664"',children:"int list_delete(struct node_st **list) {\n  struct node_st *cur;\n  if (*list == NULL) {\n    return -1;\n  }\n  cur = *list;\n  *list = (*list)->next;\n  free(cur);\n  return 0;\n}\n\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"\u63d2\u5165\u64cd\u4f5c\u7684\u8fc7\u7a0b\u548c\u65e0\u5934\u8282\u70b9\u7684\u533a\u522b\u662f\uff0c\u9700\u8981\u6ce8\u610f\u5f15\u7528\u7684\u662f\u94fe\u8868\u7684\u4e8c\u7ea7\u6307\u9488\u6765\u5b9e\u9645\u64cd\u4f5c\u94fe\u8868\uff0c\u56e0\u4e3a\u5728\u6709\u5934\u7ed3\u70b9\u65f6\uff0c\u4f60\u4fdd\u7559\u6709\u8fd9\u4e2a\u94fe\u8868\u7684\u6307\u9488\uff0c\u63d2\u5165\u53ea\u9700\u63d0\u4f9b\u6307\u9488\u53d8\u91cf\u5373\u53ef\u3002"})}),"\n",(0,s.jsx)(e.h4,{id:"\u9500\u6bc1\u64cd\u4f5c",children:"\u9500\u6bc1\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"int list_destroy(struct node_st *list) \n{\n  struct node_st *cur;\n  if (list == NULL) {\n    return 0;\n  }\n  for (cur = list; cur != NULL; cur = list) {\n    list = cur->next;\n    free(cur);\n  }\n  return 0;\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u5355\u94fe\u8868\u5e94\u7528\u4e3e\u4f8b",children:"\u5355\u94fe\u8868\u5e94\u7528\u4e3e\u4f8b"}),"\n",(0,s.jsx)(e.h4,{id:"\u591a\u9879\u5f0f\u5408\u5e76",children:"\u591a\u9879\u5f0f\u5408\u5e76"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n\nstruct node_st {\n  int coef;\n  int exp;\n  struct node_st *next;\n};\nstruct node_st *poly_create(int a[][2], int n) {\n  struct node_st *me, *newnode, *cur;\n  int i;\n  me = malloc(sizeof(*me));\n  if (me == NULL) {\n    return NULL;\n  }\n  cur = me;\n  me->next = NULL;\n  for (i = 0; i < n; i++) {\n    newnode = malloc(sizeof(*newnode));\n    if (newnode == NULL)\n      return NULL;\n    newnode->coef = a[i][0];\n    newnode->exp = a[i][1];\n    newnode->next = NULL;\n    cur->next = newnode;\n    cur = newnode; // \u5411\u540e\u79fb\u52a8\u94fe\u8868\n  }\n  return me;\n}\nvoid poly_show(struct node_st *me) {\n  struct node_st *cur;\n  for (cur = me->next; cur != NULL; cur = cur->next) {\n    printf("(%d %d) ", cur->coef, cur->exp);\n  }\n  printf("\\n");\n}\n\nvoid poly_union(struct node_st *p1, struct node_st *p2) {\n  struct node_st *p, *q, *r;\n  p = p1->next;\n  q = p2->next;\n  r = p1;\n  while (p && q) {\n    if (p->exp < q->exp) {\n      r->next = p;\n      r = p;\n      p = p->next;\n\n    } else if (p->exp > q->exp) {\n      r->next = q;\n      r = q;\n      q = q->next;\n    } else {\n      p->coef += q->coef;\n      if (p->coef) {\n        r->next = p;\n        r = p;\n      }\n      p = p->next;\n      q = q->next;\n    }\n  }\n  if (p == NULL) {\n    r->next = q;\n  } else {\n    r->next = p;\n  }\n}\n\nint main() {\n  int a[][2] = {{5, 0}, {2, 1}, {8, 8}, {3, 16}};\n  int b[][2] = {{6, 1}, {16, 6}, {-8, 8}};\n  struct node_st *p1, *p2;\n\n  p1 = poly_create(a, 4);\n  p2 = poly_create(b, 3);\n\n  poly_show(p1);\n  poly_show(p2);\n  /* poly_show(); */\n\n  poly_union(p1, p2);\n  poly_show(p1);\n  exit(0);\n}\n\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5faa\u73af\u5b58\u50a8",children:"\u7ebf\u6027\u8868\u94fe\u5f0f\u5faa\u73af\u5b58\u50a8"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:t(47154).A+"",width:"922",height:"187"})}),"\n",(0,s.jsx)(e.h3,{id:"\u65e0\u5934\u7ed3\u70b9\u7ea6\u745f\u592b\u95ee\u9898",children:"\u65e0\u5934\u7ed3\u70b9(\u7ea6\u745f\u592b\u95ee\u9898)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:'#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#define JOSE_NR 8\nstruct node_st {\n  int data;\n  struct node_st *next;\n};\nstruct node_st *jose_create(int n) {\n  int i = 1;\n  struct node_st *me, *newnode, *cur;\n  me = malloc(sizeof(*me));\n  if (me == NULL)\n    return NULL;\n  me->data = i;\n  me->next = me; // \u5934\u8282\u70b9\u73af\u8def\n  i++;\n  cur = me;\n  for (; i <= n; i++) {\n    newnode = malloc(sizeof(*newnode));\n    if (newnode == NULL) {\n      return NULL;\n    }\n    newnode->data = i;\n    newnode->next = me;\n    cur->next = newnode;\n    cur = newnode;\n  }\n  return me;\n}\nvoid jose_show(struct node_st *me) {\n  struct node_st *list;\n  for (list = me; list->next != me; list = list->next) {\n\n    printf("%d->", list->data);\n    /* sleep(1); */\n    /* fflush(NULL); */\n  }\n  printf("%d\\n", list->data);\n}\nvoid jose_kill(struct node_st **me, int n) {\n  struct node_st *cur = *me, *node; // node\u662fcur\u7684\u524d\u9a71\n  int i = 1;\n  while (cur != cur->next) {\n    while (i < n) {\n      node = cur;\n      cur = cur->next;\n      i++;\n    }\n    printf("%d ", cur->data);\n    node->next = cur->next;\n    free(cur);\n\n    cur = node->next;\n    i = 1;\n  }\n  *me = cur;\n  printf("\\n");\n}\nint main(int argc, char *argv[]) {\n  struct node_st *list;\n  int n = 3;\n  list = jose_create(JOSE_NR);\n  jose_show(list);\n\n  jose_kill(&list, n);\n  jose_show(list);\n  return EXIT_SUCCESS;\n}\n\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u5faa\u73af\u53cc\u94fe\u8868\u9762\u5411\u8fc7\u7a0b",children:"\u5faa\u73af\u53cc\u94fe\u8868(\u9762\u5411\u8fc7\u7a0b)"}),"\n",(0,s.jsx)(e.h3,{id:"\u6570\u636e\u7ed3\u6784",children:"\u6570\u636e\u7ed3\u6784"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"struct llist_node_st\n{\n    void * data; //void *\uff0c\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\n    struct llist_node_st *prev;//\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\n    struct llist_node_st *next;//\u6307\u5411\u540e\u4e00\u4e2a\u8282\u70b9\n    \n};\n\ntypedef struct llist_head_st //\u94fe\u8868\u5934\u7ed3\u6784\n{\n    int size;\n    struct llist_node_st head;\n}LLIST;\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u51fd\u6570\u62bd\u8c61",children:"\u51fd\u6570\u62bd\u8c61"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"typedef void llist_op(const void *);\ntypedef int llist_cmp(const void *,const void *);\nLLIST* llist_create(int initsize);\nvoid * llist_find(LLIST *, const void *key, llist_cmp *cmp);\nint llist_insert(LLIST *, const void *data, int mode);//mode:0\u5934\u63d2 1\u5c3e\u63d2\n\nint llist_delete(LLIST *, const void *, llist_cmp *);\nint llist_fetch(LLIST *, const void *, llist_cmp *,void *);\n\nvoid llist_destory(LLIST *);\nvoid llist_travel(LLIST *, llist_op *op);\n\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u5404\u51fd\u6570\u4e66\u5199",children:"\u5404\u51fd\u6570\u4e66\u5199"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"\nLLIST* llist_create(int initsize){\n    LLIST *new;\n    new = malloc(sizeof(*new));\n    if(new == NULL)\n        return NULL;\n    new->size = initsize;\n    new->head.data=NULL;\n    new->head.prev=&new->head;\n    new->head.next=&new->head;//\u5faa\u73af\u94fe\u8868\n}// 1.\u5206\u914d\u7a7a\u95f4 2.\u521d\u59cb\u5316\u5934\u8282\u70b9 3.\u8fd4\u56de\u5934\u8282\u70b9\u5730\u5740\n\nint llist_insert(LLIST *ptr, const void *data, int mode){\n    struct llist_node_st *newnode;\n    newnode = malloc(sizeof(*newnode));\n    if(newnode == NULL)\n        return -1;\n    newnode->data = malloc(ptr->size);\n    if(newnode->data == NULL){\n        free(newnode);\n        return -1;\n    }\n    memcpy(newnode->data, data, ptr->size);\n    if(mode == LLIST_FORWARD){//\u5728\u5934\u8282\u70b9\u540e\u524d\u9762\u63d2\u5165\n        newnode->prev = &ptr->head;\n        newnode->next = ptr->head.next;\n    }else if(mode == LLIST_BACKWARD){  //\u5728\u5934\u8282\u70b9\u524d\u9762\u63d2\u5165\n        newnode->prev = ptr->head.prev; \n        newnode->next = &ptr->head;\n    }else{\n        return -3;\n    }\n    newnode->prev->next = newnode;\n    newnode->next->prev = newnode;\n    return 0;\n}\n\nvoid llist_destory(LLIST *ptr){\n    struct llist_node_st *cur,*next;\n    for(cur=ptr->head.next;cur!=&ptr->head;cur=next){//cur!=&ptr->head \u4fdd\u8bc1\u4e86\u5faa\u73af\u94fe\u8868\u7684\u904d\u5386\n        next=cur->next;\n        free(cur->data);\n        free(cur);\n    }\n    free(ptr);\n}\n\nstatic struct llist_node_st* find_(LLIST *ptr,const void *key,llist_cmp *cmp){\n    struct llist_node_st *cur;\n    for(cur = ptr->head.next;cur!=&ptr->head;cur = cur->next){\n        if(cmp(key,cur->data)==0)\n            break;\n    }\n    return cur;\n}\n\nvoid * llist_find(LLIST *ptr, const void *key, llist_cmp *cmp){\n    return find_(ptr,key,cmp)->data;\n}\n\nint llist_delete(LLIST *ptr, const void *key, llist_cmp *cmp){\n    struct llist_node_st *node;\n    node = find_(ptr,key,cmp);\n    if(node == &ptr->head)\n        return -1;\n    node->prev->next = node->next;\n    node->next->prev = node->prev;\n    free(node->data);\n    free(node);\n    return 0;\n}\n\nint llist_fetch(LLIST *ptr, const void *key, llist_cmp *cmp,void *data){\n    struct llist_node_st *node;\n    node = find_(ptr,key,cmp);\n    if(node == &ptr->head)\n        return -1;\n    node->prev->next = node->next;\n    node->next->prev = node->prev;\n    if(data != NULL)\n        memcpy(data,node->data,ptr->size);\n    return 0;\n}\n\nvoid llist_travel(LLIST *ptr, llist_op *op){\n    struct llist_node_st *cur;\n    for(cur=ptr->head.next;cur!=&ptr->head;cur=cur->next){\n        op(cur->data);\n}\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"\u5faa\u73af\u53cc\u94fe\u53d8\u957f\u7ed3\u6784\u4f53",children:"\u5faa\u73af\u53cc\u94fe(\u53d8\u957f\u7ed3\u6784\u4f53)"}),"\n",(0,s.jsx)(e.h3,{id:"\u7ed3\u6784\u4f53\u5b9a\u4e49",children:"\u7ed3\u6784\u4f53\u5b9a\u4e49"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"struct llist_node_st\n{\n    struct llist_node_st *prev;//\u6307\u5411\u524d\u4e00\u4e2a\u8282\u70b9\n    struct llist_node_st *next;//\u6307\u5411\u540e\u4e00\u4e2a\u8282\u70b9\n    char data[0]; //\u8fd9\u4e2a\u67d4\u6027\u6570\u7ec4\uff0c\u5360\u4f4d\u4f7f\u7528\u7684\u3002\n};\n\ntypedef struct llist_head_st //\u94fe\u8868\u5934\u7ed3\u6784\n{\n    int size;\n    struct llist_node_st head;\n}LLIST;\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsxs)(e.p,{children:["\u67d4\u6027\u6570\u7ec4\u662f\u548c\u6bcf\u4e2a\u7ed3\u6784\u4f53\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\uff0c\u800c\u6307\u9488\u5219\u4e0d\u7136\uff0c\u6b64\u5916\u67d4\u6027\u6570\u7ec4\u5728\u4f7f\u7528\u4e0a\u662f\u76f4\u63a5\u8bbf\u95ee\uff0c\u5f62\u5f0f\u4e0a",(0,s.jsx)(e.strong,{children:"\u66f4\u52a0\u76f4\u89c2"}),"\uff0c\u800c\u6307\u9488\u9700\u8981\u7ecf\u8fc7\u58f0\u660e\u518d\u8fdb\u884c\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u5728\u6548\u7387\u4e0a\u548c\u67d4\u6027\u6570\u7ec4\u76f8\u6bd4\u4e5f\u7a0d\u5fae\u4f4e\u4e00\u4e9b\u3002"]})}),"\n",(0,s.jsx)(e.h2,{id:"\u5faa\u73af\u53cc\u94fe\u8868\u9762\u5411\u5bf9\u8c61",children:"\u5faa\u73af\u53cc\u94fe\u8868(\u9762\u5411\u5bf9\u8c61)"}),"\n",(0,s.jsx)(e.h3,{id:"\u7ed3\u6784\u4f53\u5b9a\u4e49\u7c7b",children:"\u7ed3\u6784\u4f53\u5b9a\u4e49(\u7c7b)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"typedef struct llist_head //\u94fe\u8868\u5934\u7ed3\u6784\n{\n    int size;\n    struct llist_node_st head;\n    int (*insert)(struct llist_head *,const void *,int);\n    void *(*find)(struct llist_head *,const void *,llist_cmp *);\n    int (*delete)(struct llist_head *,const void *,llist_cmp *);\n    int (*fetch)(struct llist_head *,const void *,llist_cmp *,void *);\n    void (*travel)(struct llist_head *,llist_op *);\n}LLIST;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"\u7c7b\u7684\u6784\u9020",children:"\u7c7b\u7684\u6784\u9020"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-c",children:"LLIST* llist_create(int initsize){\n    LLIST *new;\n    new = malloc(sizeof(*new));\n    if(new == NULL)\n        return NULL;\n    new->size = initsize;\n    new->head.data=NULL;\n    new->head.prev=&new->head;\n    new->head.next=&new->head;//\u5faa\u73af\u94fe\u8868\n    new->insert=llist_insert;\n    new->find=llist_find;\n    new->delete=llist_delete;\n    new->fetch=llist_fetch;\n    new->travel=llist_travel;\n}// 1.\u5206\u914d\u7a7a\u95f4 2.\u521d\u59cb\u5316\u5934\u8282\u70b9 3.\u8fd4\u56de\u5934\u8282\u70b9\u5730\u5740\n"})})]})}function m(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}},72500:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230622214146-f2935b24b0fdf7becb98669895bec2c3.png"},14144:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230622223243-3f2f807f044a2b63c04d24085c57a44b.png"},24077:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230622223303-6a32d580b42459f0ea39d4a8479efa2c.png"},24123:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230623233622-fef696da83f29092516baa112b479b78.png"},75642:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230623233641-7947e5c5a55b82c027f8d432fc717308.png"},21714:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230626085812-2caf4b13b2b208a9830d0c7b4970ee9e.png"},82555:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230626085930-07d07db8fc91f701a64fa1c3001df85c.png"},56975:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230626090231-b58e6af34ed3e841ec1d938dba6476a4.png"},86856:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230626090311-0309c468eb2a2d2da874972bb3c3248b.png"},47154:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-20230717234424-78fd98812708c7a0691e7b94de559354.png"},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var s=t(96540);const i={},l=s.createContext(i);function r(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);